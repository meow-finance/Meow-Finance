diff --git a/node_modules/@openzeppelin/contracts-ethereum-package/contracts/.DS_Store b/node_modules/@openzeppelin/contracts-ethereum-package/contracts/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20.zip b/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20.zip
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol b/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol
index 7e602dd..5d159cd 100644
--- a/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol
+++ b/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20.sol
@@ -80,7 +80,7 @@ contract ERC20UpgradeSafe is Initializable, ContextUpgradeSafe, IERC20 {
      * @dev Returns the symbol of the token, usually a shorter version of the
      * name.
      */
-    function symbol() public view returns (string memory) {
+    function symbol() public view override returns (string memory) {
         return _symbol;
     }
 
@@ -97,7 +97,7 @@ contract ERC20UpgradeSafe is Initializable, ContextUpgradeSafe, IERC20 {
      * no way affects any of the arithmetic of the contract, including
      * {IERC20-balanceOf} and {IERC20-transfer}.
      */
-    function decimals() public view returns (uint8) {
+    function decimals() public view override returns (uint8) {
         return _decimals;
     }
 
diff --git a/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol b/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol
index 8c69d96..f1cb609 100644
--- a/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol
+++ b/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol
@@ -59,6 +59,27 @@ interface IERC20 {
      */
     function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);
 
+    /**
+     * @dev Returns the symbol of the token, usually a shorter version of the
+     * name.
+     */
+    function symbol() external view returns (string memory);
+
+    /**
+     * @dev Returns the number of decimals used to get its user representation.
+     * For example, if `decimals` equals `2`, a balance of `505` tokens should
+     * be displayed to a user as `5,05` (`505 / 10 ** 2`).
+     *
+     * Tokens usually opt for a value of 18, imitating the relationship between
+     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is
+     * called.
+     *
+     * NOTE: This information is only used for _display_ purposes: it in
+     * no way affects any of the arithmetic of the contract, including
+     * {IERC20-balanceOf} and {IERC20-transfer}.
+     */
+    function decimals() external view returns (uint8);
+
     /**
      * @dev Emitted when `value` tokens are moved from one account (`from`) to
      * another (`to`).
diff --git a/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol b/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol
index dca6080..280f7e0 100644
--- a/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol
+++ b/node_modules/@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/SafeERC20.sol
@@ -1,4 +1,4 @@
-pragma solidity ^0.6.0;
+ pragma solidity ^0.6.0;
 
 import "./IERC20.sol";
 import "../../math/SafeMath.sol";
